import { useContext } from "react";
import { EventsContext } from "../../context/EventsContext";

export const MapPage = () => {
    const context = useContext(EventsContext);

    if (!context || context.loading) {
        return <p>Loading...</p>;
    }

    const { events } = context;

    return (
        <>
            <h2>MAP</h2>
            <div className="p-4">
                <h2 className="text-xl font-bold mb-2">Llistat d'Ubicacions</h2>
                <ul className="space-y-2">
                    {events?.map((u) => (
                        <li key={u.id} className="border p-2 rounded shadow">
                            <strong>{u.name}</strong>
                            Edad: {u.id}
                        </li>
                    ))}
                </ul>
            </div>
        </>
    );
};
import { useContext } from "react";
import { EventsContext } from "../../context/EventsContext";
import { BarChart, PieChart } from "./components";
import { chartFormat } from "../../utils/chartFormat";
import { ChartData } from "chart.js";
import styles from "./ChartPage.module.css";

export const ChartPage = () => {
    const context = useContext(EventsContext);

    if (!context || context.loading) {
        return <p>Loading...</p>;
    }

    const { events } = context;

    const barChartFormat = chartFormat(events, "bar") as ChartData<"bar">;
    const pieChartFormat = chartFormat(events, "pie") as ChartData<"pie">;

    if (!barChartFormat || !pieChartFormat) {
        return <p>Error generating charts</p>;
    }

    return (
        <>
            <h2>
                EVENT DISTRIBUTION <br />
                BY CATEGORY
            </h2>
            <div className="container">
                <div className="row">
                    <div className="col-12 col-md-6">
                        <div className={styles.chartContainer}>
                            <BarChart data={barChartFormat} />
                        </div>
                    </div>
                    <div className="col-12 col-md-6">
                        <div className={styles.chartContainer}>
                            <PieChart data={pieChartFormat} />
                        </div>
                    </div>
                </div>
            </div>
        </>
    );
};
import { Bar } from "react-chartjs-2";
import {
    Chart as ChartJS,
    CategoryScale,
    LinearScale,
    BarElement,
    Title,
    Tooltip,
    Legend,
    ChartData,
} from "chart.js";

ChartJS.register(
    CategoryScale,
    LinearScale,
    BarElement,
    Title,
    Tooltip,
    Legend
);

interface BarChartProps {
    data: ChartData<"bar">;
}

export const BarChart = ({ data }: BarChartProps) => {
    return (
        <>
            <h2>BAR CHART</h2>
            <Bar data={data} />
        </>
    );
};
import {
    Chart as ChartJS,
    ArcElement,
    Tooltip,
    Legend,
    ChartData,
} from "chart.js";
import { Pie } from "react-chartjs-2";

ChartJS.register(ArcElement, Tooltip, Legend);

interface PieChartProps {
    data: ChartData<"pie", number[], unknown>;
}

export const PieChart = ({ data }: PieChartProps) => {
    return (
        <>
            <h2>PIE CHART</h2>
            <Pie data={data} />
        </>
    );
};
export * from "./BarChart/BarChart";
export * from "./PieChart/PieChart";
import { Link } from "react-router-dom";
import styles from "./HomePage.module.css";
import { settings, map, calendar, chart } from "../../assets/images";

export const HomePage = () => {
    return (
        <div className={styles.container}>
            <h1 className={styles.title}>WELCOME TO EVENT MANAGER</h1>
            <div className={styles.cardGrid}>
                <div className={styles.card}>
                    <img
                        src={calendar}
                        alt="Calendar"
                        className={styles.image}
                    />
                    <h3>Calendar View</h3>
                    <p>See all events in a calendar format</p>
                    <Link to="/calendar" className={styles.button}>
                        Go
                    </Link>
                </div>
                <div className={styles.card}>
                    <img src={chart} alt="Chart" className={styles.image} />
                    <h3>Chart Analysis</h3>
                    <p>Explore events by category in charts</p>
                    <Link to="/chart" className={styles.button}>
                        Go
                    </Link>
                </div>
                <div className={styles.card}>
                    <img src={map} alt="Map" className={styles.image} />
                    <h3>Map View</h3>
                    <p>Locate events on an interactive map</p>
                    <Link to="/map" className={styles.button}>
                        Go
                    </Link>
                </div>
                <div className={styles.card}>
                    <img src={settings} alt="Admin" className={styles.image} />
                    <h3>Admin Panel</h3>
                    <p>Add or delete events</p>
                    <Link to="/admin" className={styles.button}>
                        Go
                    </Link>
                </div>
            </div>
        </div>
    );
};
import { Link } from "react-router-dom";
import styles from "./NotFound.module.css";

export const NotFound = () => {
    return (
        <div className={styles.container}>
            <h1 className={styles.title}>ü§î ¬°Oops!</h1>
            <p>Parece que te has perdido...</p>

            <img
                src="https://media.giphy.com/media/VbnUQpnihPSIgIXuZv/giphy.gif"
                alt="Gato programador"
                className={styles.gif}
            />

            <Link to="/" className={styles.button}>
                üè† Volver al inicio
            </Link>
        </div>
    );
};
import { AddEvent, DeleteEvent } from "./components";

export const AdminPage = () => {
    return (
        <>
            <h2>ADMINISTRATION OPERATIONS</h2>
            <AddEvent />
            <DeleteEvent />
        </>
    );
};
import { useContext, useState } from "react";
import { EventsContext } from "../../../../context/EventsContext";
import { deleteEventById } from "../../../../utils/deleteEventById";

import styles from "./DeleteEvent.module.css";

export const DeleteEvent = () => {
    const context = useContext(EventsContext);
    const [selectedId, setSelectedId] = useState("");

    if (context?.loading) return <p>Loading calendar...</p>;

    const events =
        context?.events.map((u) => ({
            id: u.id,
            title: u.name,
        })) || [];

    const handleDelete = async () => {
        if (!selectedId) return;
        await deleteEventById(selectedId);
        console.log("Deleted event with ID:", selectedId);
        setSelectedId("");
    };

    return (
        <>
            <div className={styles.container}>
                <h3>DELETE EVENT</h3>
                <select
                    className={styles.select}
                    value={selectedId}
                    onChange={(e) => setSelectedId(e.target.value)}
                >
                    <option value="">-- Select an event --</option>
                    {events.map((event) => (
                        <option key={event.id} value={event.id}>
                            {event.title}
                        </option>
                    ))}
                </select>

                <button
                    className={styles.button}
                    onClick={handleDelete}
                    disabled={!selectedId}
                >
                    Delete
                </button>
            </div>
        </>
    );
};
import { useState } from "react";
import { collection, addDoc } from "firebase/firestore";
import { db } from "../../../../firebase/firestore";
import { categories } from "../../../../utils/chartFormat";
import styles from "./AddEvent.module.css";

export const AddEvent = () => {
    const [name, setName] = useState("");
    const [category, setCategory] = useState("");
    const [lat, setLat] = useState<number | string>("");
    const [lng, setLng] = useState<number | string>("");
    const [visitDate, setVisitDate] = useState("");

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();

        if (!name || !category || !lat || !lng || !visitDate) {
            alert("Please fill in all fields.");
            return;
        }

        try {
            await addDoc(collection(db, "places"), {
                name,
                category,
                lat: Number(lat),
                lng: Number(lng),
                visitDate,
            });

            setName("");
            setCategory("");
            setLat("");
            setLng("");
            setVisitDate("");
        } catch (e) {
            console.error("Error adding document:", e);
        }
    };

    return (
        <>
            <div className={styles.container}>
                <h3>ADD EVENT</h3>

                <form onSubmit={handleSubmit} className={styles.form}>
                    <input
                        type="text"
                        placeholder="Name"
                        value={name}
                        onChange={(e) => setName(e.target.value)}
                        className={styles.input}
                    />
                    <select
                        name="categories"
                        value={category}
                        onChange={(e) => setCategory(e.target.value)}
                        className={styles.select}
                    >
                        <option value="">-- Choose a category --</option>
                        {categories.map((cat, index) => (
                            <option value={cat} key={index}>
                                {cat}
                            </option>
                        ))}
                    </select>
                    <input
                        type="number"
                        placeholder="Latitude"
                        value={lat}
                        onChange={(e) => setLat(e.target.value)}
                        className={styles.input}
                    />
                    <input
                        type="number"
                        placeholder="Longitude"
                        value={lng}
                        onChange={(e) => setLng(e.target.value)}
                        className={styles.input}
                    />
                    <input
                        type="date"
                        value={visitDate}
                        onChange={(e) => setVisitDate(e.target.value)}
                        className={styles.date}
                    />
                    <button type="submit" className={styles.button}>
                        SEND
                    </button>
                </form>
            </div>
        </>
    );
};
export * from "./AddEvent/AddEvent";
export * from "./DeleteEvent/DeleteEvent";
export { AdminPage } from "./AdminPage/AdminPage.tsx";
export { CalendarPage } from "./CalendarPage/CalendarPage.tsx";
export { ChartPage } from "./ChartPage/ChartPage.tsx";
export { HomePage } from "./HomePage/HomePage.tsx";
export { MapPage } from "./MapPage/MapPage.tsx";
export { NotFound } from "./NotFound/NotFound.tsx";
import { Calendar } from "./components/Calendar";

export const CalendarPage = () => {
    return (
        <>
            <h2>CALENDAR</h2>

            <Calendar />
        </>
    );
};
import FullCalendar from "@fullcalendar/react";
import dayGridPlugin from "@fullcalendar/daygrid";
import timeGridPlugin from "@fullcalendar/timegrid";
import interactionPlugin from "@fullcalendar/interaction";

import { useContext } from "react";
import { EventsContext } from "../../../context/EventsContext";

import { deleteEvent } from "../../../utils/deleteEvent";

import "./calendar.css";
import styles from "./calendar.module.css";

export const Calendar = () => {
    const context = useContext(EventsContext);

    if (context?.loading) return <p>Loading calendar...</p>;

    const events = context?.events.map((u) => {
        return {
            id: u.id,
            title: u.name,
            date: u.visitDate,
        };
    });

    return (
        <>
            <FullCalendar
                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}
                initialView={"dayGridMonth"}
                events={events}
                eventClick={deleteEvent}
                firstDay={1}
                fixedWeekCount={false}
                height={"auto"}
            />
            <p className={styles.deleteInfo}>
                Delete an event by clicking on it
            </p>
        </>
    );
};
